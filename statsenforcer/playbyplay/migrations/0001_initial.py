# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-24 20:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('gamePk', models.IntegerField(primary_key=True, serialize=False)),
                ('link', models.URLField()),
                ('gameType', models.CharField(choices=[(b'PR', b'Pre-season'), (b'R', b'Regular season'), (b'P', b'Playoffs'), (b'A', b'All-Star game')], max_length=2)),
                ('season', models.IntegerField(db_index=True)),
                ('dateTime', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('endDateTime', models.DateTimeField(blank=True, null=True)),
                ('gameState', models.CharField(choices=[(b'1', b'Preview (Scheduled)'), (b'2', b'Preview (Pre-Game)'), (b'3', b'Live (In Progress)'), (b'4', b'Live (In Progress - Critical)'), (b'5', b'Final (Game Over)'), (b'6', b'Final'), (b'7', b'Final'), (b'8', b'Preview (Scheduled (Time TBD))'), (b'9', b'Preview (Postponed)')], max_length=1)),
                ('homeScore', models.IntegerField(blank=True, null=True)),
                ('awayScore', models.IntegerField(blank=True, null=True)),
                ('homeShots', models.IntegerField(blank=True, null=True)),
                ('awayShots', models.IntegerField(blank=True, null=True)),
                ('homePPGoals', models.IntegerField(blank=True, null=True)),
                ('awayPPGoals', models.IntegerField(blank=True, null=True)),
                ('homePPOpportunities', models.IntegerField(blank=True, null=True)),
                ('awayPPOpportunities', models.IntegerField(blank=True, null=True)),
                ('homeFaceoffPercentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('awayFaceoffPercentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('homeBlocked', models.IntegerField(blank=True, null=True)),
                ('awayBlocked', models.IntegerField(blank=True, null=True)),
                ('homeMissed', models.IntegerField(blank=True, null=True)),
                ('awayMissed', models.IntegerField(blank=True, null=True)),
                ('homePIM', models.IntegerField(blank=True, null=True)),
                ('awayPIM', models.IntegerField(blank=True, null=True)),
                ('homeTakeaways', models.IntegerField(blank=True, null=True)),
                ('awayTakeaways', models.IntegerField(blank=True, null=True)),
                ('homeGiveaways', models.IntegerField(blank=True, null=True)),
                ('awayGiveaways', models.IntegerField(blank=True, null=True)),
                ('homeHits', models.IntegerField(blank=True, null=True)),
                ('awayHits', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GamePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('startTime', models.DateTimeField(blank=True, null=True)),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('homeScore', models.IntegerField(blank=True, null=True)),
                ('awayScore', models.IntegerField(blank=True, null=True)),
                ('homeShots', models.IntegerField(blank=True, null=True)),
                ('awayShots', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameScratch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Game Scratch',
                'verbose_name_plural': 'Game Scratches',
            },
        ),
        migrations.CreateModel(
            name='GoalieGameStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('timeOnIce', models.TimeField()),
                ('assists', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('pim', models.IntegerField()),
                ('shots', models.IntegerField()),
                ('saves', models.IntegerField()),
                ('powerPlaySaves', models.IntegerField()),
                ('shortHandedSaves', models.IntegerField()),
                ('evenSaves', models.IntegerField()),
                ('shortHandedShotsAgainst', models.IntegerField()),
                ('evenShotsAgainst', models.IntegerField()),
                ('powerPlayShotsAgainst', models.IntegerField()),
                ('decision', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='PlayByPlay',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('eventId', models.IntegerField(blank=True, null=True)),
                ('eventIdx', models.IntegerField(blank=True, null=True)),
                ('period', models.IntegerField()),
                ('periodTime', models.TimeField()),
                ('dateTime', models.DateTimeField(blank=True, null=True)),
                ('playType', models.CharField(choices=[(b'UNKNOWN', b'Unknown'), (b'FACEOFF', b'Faceoff'), (b'HIT', b'Hit'), (b'GIVEAWAY', b'Giveaway'), (b'GOAL', b'Goal'), (b'SHOT', b'Shot'), (b'MISSED_SHOT', b'Missed Shot'), (b'PENALTY', b'Penalty'), (b'PENALTY_END', b'Penalty Ended'), (b'STOP', b'Stoppage'), (b'SUBSTITUTION', b'Substitution'), (b'FIGHT', b'Fight'), (b'TAKEAWAY', b'Takeaway'), (b'BLOCKED_SHOT', b'Blocked Shot'), (b'PERIOD_START', b'Period Start'), (b'PERIOD_END', b'Period End'), (b'GAME_END', b'Game End'), (b'GAME_SCHEDULED', b'Game Scheduled'), (b'PERIOD_READY', b'Period Ready'), (b'PERIOD_OFFICIAL', b'Period Official'), (b'SHOOTOUT_COMPLETE', b'Shootout Complete'), (b'EARLY_INT_START', b'Early Intermission Start'), (b'EARLY_INT_END', b'Early Intermission End'), (b'GAME_OFFICIAL', b'Game Official'), (b'CHALLENGE', b'Official Challenge'), (b'EMERGENCY_GOALTENDER', b'Emergency Goaltender')], max_length=25)),
                ('playDescription', models.CharField(blank=True, max_length=100, null=True)),
                ('shotType', models.CharField(blank=True, choices=[(b'WRIST', b'Wrist'), (b'SNAP', b'Snapshot'), (b'SLAP', b'Slapshot'), (b'BACK', b'Backhand'), (b'TIP', b'Tip-In'), (b'WRAP', b'Wrap'), (b'DEFLECT', b'Deflected'), (b'UNSPECIFIED', b'Unspecified')], max_length=12, null=True)),
                ('penaltyType', models.CharField(blank=True, max_length=100, null=True)),
                ('penaltySeverity', models.CharField(blank=True, max_length=100, null=True)),
                ('penaltyMinutes', models.IntegerField(blank=True, null=True)),
                ('homeScore', models.IntegerField()),
                ('awayScore', models.IntegerField()),
                ('xcoord', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ycoord', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('timeOnIce', models.IntegerField(blank=True, null=True)),
                ('strength', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Play By Play',
            },
        ),
        migrations.CreateModel(
            name='PlayerGameStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField()),
                ('timeOnIce', models.TimeField()),
                ('assists', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('shots', models.IntegerField()),
                ('hits', models.IntegerField()),
                ('powerPlayGoals', models.IntegerField()),
                ('powerPlayAssists', models.IntegerField()),
                ('penaltyMinutes', models.IntegerField()),
                ('faceOffWins', models.IntegerField()),
                ('faceoffTaken', models.IntegerField()),
                ('takeaways', models.IntegerField()),
                ('giveaways', models.IntegerField()),
                ('shortHandedGoals', models.IntegerField()),
                ('shortHandedAssists', models.IntegerField()),
                ('blocked', models.IntegerField()),
                ('plusMinus', models.IntegerField()),
                ('evenTimeOnIce', models.TimeField()),
                ('powerPlayTimeOnIce', models.TimeField()),
                ('shortHandedTimeOnIce', models.TimeField()),
            ],
            options={
                'verbose_name': 'Player Game Stats',
                'verbose_name_plural': 'Players Game Stats',
            },
        ),
        migrations.CreateModel(
            name='PlayerInPlay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_type', models.IntegerField(blank=True, choices=[(0, b'Unknown'), (1, b'Winner'), (2, b'Loser'), (3, b'Hitter'), (4, b'Hittee'), (5, b'Scorer'), (6, b'Assist'), (7, b'Shooter'), (8, b'Goalie'), (9, b'Blocker'), (10, b'PenaltyOn'), (11, b'DrewBy'), (12, b'ServedBy'), (13, b'PlayerID'), (14, b'Fighter'), (15, b'OnIce'), (16, b'Assist 2')], null=True)),
            ],
            options={
                'verbose_name': 'Player On Ice',
                'verbose_name_plural': 'Players On Ice',
            },
        ),
        migrations.CreateModel(
            name='PlayerOnIce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
                ('play', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.PlayByPlay')),
            ],
        ),
        migrations.CreateModel(
            name='Shootout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awayScores', models.IntegerField()),
                ('awayAttempts', models.IntegerField()),
                ('homeScores', models.IntegerField()),
                ('homeAttempts', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
            ],
        ),
    ]
